#!/bin/bash

# State-Aware VPN Manager with Bulletproof Kill Switch

# Usage: vpn-manager [speed|privacy|streaming|off|status]

PROFILES_DIR=”/etc/wireguard/profiles”
ACTIVE_CONFIG=”/etc/wireguard/mulvad.conf”
VPN_INTERFACE=“mulvad”

apply_lockdown_rules() {
local server_ip=”$1”
local port=”$2”

```
echo "Applying LOCKDOWN rules..."
sudo iptables -F
sudo iptables -P INPUT DROP
sudo iptables -P FORWARD DROP
sudo iptables -P OUTPUT DROP

# Essential services only
sudo iptables -A OUTPUT -o lo -j ACCEPT
sudo iptables -A INPUT -i lo -j ACCEPT
sudo iptables -A OUTPUT -d 127.0.0.1 -p udp --dport 53 -j ACCEPT
sudo iptables -A INPUT -p tcp --dport 22 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
sudo iptables -A OUTPUT -p tcp --sport 22 -m conntrack --ctstate ESTABLISHED -j ACCEPT

# ONLY allow VPN handshake
sudo iptables -A OUTPUT -d "$server_ip" -p udp --dport "$port" -j ACCEPT

echo "LOCKDOWN active - only VPN handshake allowed to $server_ip:$port"
```

}

apply_active_rules() {
echo “VPN connected. Applying ACTIVE rules…”

```
# Clear OUTPUT and rebuild with VPN tunnel
sudo iptables -F OUTPUT

# Re-add essentials
sudo iptables -A OUTPUT -o lo -j ACCEPT
sudo iptables -A OUTPUT -d 127.0.0.1 -p udp --dport 53 -j ACCEPT
sudo iptables -A OUTPUT -p tcp --sport 22 -m conntrack --ctstate ESTABLISHED -j ACCEPT

# NOW the interface exists - allow all traffic through tunnel
sudo iptables -A OUTPUT -o "$VPN_INTERFACE" -j ACCEPT
sudo iptables -A INPUT -i "$VPN_INTERFACE" -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT

echo "✅ ACTIVE rules applied - all traffic routed through VPN"
```

}

restore_base_firewall() {
sudo iptables -F
sudo iptables -P INPUT DROP
sudo iptables -P FORWARD DROP
sudo iptables -P OUTPUT DROP
sudo iptables -A INPUT -i lo -j ACCEPT
sudo iptables -A OUTPUT -o lo -j ACCEPT
sudo iptables -A INPUT -m conntrack –ctstate RELATED,ESTABLISHED -j ACCEPT
sudo iptables -A OUTPUT -m conntrack –ctstate RELATED,ESTABLISHED -j ACCEPT
sudo iptables -A INPUT -p tcp –dport 22 -m conntrack –ctstate NEW -j ACCEPT
sudo iptables -A OUTPUT -d 127.0.0.1 -p udp –dport 53 -j ACCEPT
sudo iptables -A OUTPUT -p tcp –dport 443 -j ACCEPT
sudo iptables -A OUTPUT -p tcp –dport 80 -j ACCEPT
sudo iptables -A OUTPUT -p udp –dport 123 -j ACCEPT
sudo iptables -A OUTPUT -p icmp –icmp-type 8 -j ACCEPT
}

switch_profile() {
local profile=”$1”
local config_file=”$PROFILES_DIR/$profile.conf”

```
[ ! -f "$config_file" ] && { echo "Profile not found: $config_file"; exit 1; }

echo "Switching to $profile with state-aware kill switch..."

# Stop current VPN
sudo systemctl stop wg-quick@mulvad 2>/dev/null || true

# Extract server info
local endpoint=$(grep "Endpoint" "$config_file" | cut -d'=' -f2 | tr -d ' ')
local server_ip=$(echo "$endpoint" | cut -d':' -f1)
local port=$(echo "$endpoint" | cut -d':' -f2)

# PHASE 1: Lockdown (before interface exists)
apply_lockdown_rules "$server_ip" "$port"

# Switch config
sudo rm -f "$ACTIVE_CONFIG"
sudo ln -sf "$config_file" "$ACTIVE_CONFIG"

# Start VPN
echo "Starting WireGuard service..."
if sudo systemctl start wg-quick@mulvad && sleep 3 && ip link show mulvad >/dev/null 2>&1; then
    # PHASE 2: Active rules (now interface exists)
    apply_active_rules
    
    local ip=$(curl -s --max-time 10 http://ipinfo.io/ip 2>/dev/null || echo "VPN IP")
    echo "✅ $profile active with bulletproof kill switch. IP: $ip"
else
    echo "❌ VPN failed to connect - system remains in LOCKDOWN"
    echo "   Run 'vpn-manager off' to restore internet"
fi

# Save rules
sudo iptables-save | sudo tee /etc/iptables/iptables.rules > /dev/null
```

}

show_status() {
if systemctl is-active –quiet wg-quick@mulvad && ip link show mulvad >/dev/null 2>&1; then
local ip=$(curl -s –max-time 5 http://ipinfo.io/ip 2>/dev/null || echo “VPN IP”)
echo “✅ Connected: $ip”

```
    if [ -L "$ACTIVE_CONFIG" ]; then
        local active_profile=$(basename $(readlink "$ACTIVE_CONFIG") .conf)
        echo "Active profile: $active_profile"
    fi
else
    echo "❌ Disconnected - traffic BLOCKED by kill switch"
fi
```

}

turn_off_vpn() {
sudo systemctl stop wg-quick@mulvad 2>/dev/null || true
restore_base_firewall
sudo iptables-save | sudo tee /etc/iptables/iptables.rules > /dev/null
echo “✅ VPN off, normal internet restored”
}

# Main command dispatcher

case “$1” in
speed|privacy|streaming)
switch_profile “$1”
;;
off)
turn_off_vpn
;;
status)
show_status
;;
*)
echo “Usage: $0 [speed|privacy|streaming|off|status]”
echo “”
echo “Commands:”
echo “  speed      - Switch to speed profile with kill switch”
echo “  privacy    - Switch to privacy profile with kill switch”
echo “  streaming  - Switch to streaming profile with kill switch”
echo “  off        - Turn off VPN and restore normal internet”
echo “  status     - Show current connection status”
exit 1
;;
esac