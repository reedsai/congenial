#!/bin/bash

# Unified VPN Manager with Bulletproof Kill Switch

# Usage: vpn-manager [speed|privacy|streaming|off|status|clear]

PROFILES_DIR=”/etc/wireguard/profiles”
ACTIVE_CONFIG=”/etc/wireguard/mulvad.conf”

setup_bulletproof_killswitch() {
local config=”$1”

```
# FLUSH EVERYTHING - start clean
sudo iptables -F
sudo iptables -P INPUT DROP
sudo iptables -P FORWARD DROP
sudo iptables -P OUTPUT DROP

# KILL SWITCH FIRST - block ALL internet traffic except VPN
sudo iptables -A OUTPUT ! -o lo ! -o mulvad -m addrtype ! --dst-type LOCAL -j REJECT

# Extract server info
local endpoint=$(grep "Endpoint" "$config" | cut -d'=' -f2 | tr -d ' ')
local server_ip=$(echo "$endpoint" | cut -d':' -f1)
local port=$(echo "$endpoint" | cut -d':' -f2)

# ONLY allow these in exact order:
# 1. Loopback
sudo iptables -I OUTPUT 1 -o lo -j ACCEPT
sudo iptables -I INPUT 1 -i lo -j ACCEPT

# 2. VPN server connection (before kill switch blocks it)
sudo iptables -I OUTPUT 1 -d "$server_ip" -p udp --dport "$port" -j ACCEPT

# 3. VPN interface traffic
sudo iptables -I OUTPUT 1 -o mulvad -j ACCEPT
sudo iptables -I INPUT 1 -i mulvad -j ACCEPT

# 4. DNS only through localhost (our DNSCrypt)
sudo iptables -I OUTPUT 1 -d 127.0.0.1 -p udp --dport 53 -j ACCEPT

# 5. SSH for management
sudo iptables -I INPUT 1 -p tcp --dport 22 -m conntrack --ctstate NEW -j ACCEPT

# 6. Established connections
sudo iptables -I INPUT 1 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
sudo iptables -I OUTPUT 1 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT

echo "BULLETPROOF Kill switch active - Server: $server_ip:$port"
```

}

restore_base_firewall() {
# Your original safe firewall
sudo iptables -F
sudo iptables -P INPUT DROP
sudo iptables -P FORWARD DROP
sudo iptables -P OUTPUT DROP
sudo iptables -A INPUT -i lo -j ACCEPT
sudo iptables -A OUTPUT -o lo -j ACCEPT
sudo iptables -A INPUT -m conntrack –ctstate RELATED,ESTABLISHED -j ACCEPT
sudo iptables -A OUTPUT -m conntrack –ctstate RELATED,ESTABLISHED -j ACCEPT
sudo iptables -A INPUT -p tcp –dport 22 -m conntrack –ctstate NEW -j ACCEPT
sudo iptables -A OUTPUT -d 127.0.0.1 -p udp –dport 53 -j ACCEPT
sudo iptables -A OUTPUT -p tcp –dport 443 -j ACCEPT
sudo iptables -A OUTPUT -p tcp –dport 80 -j ACCEPT
sudo iptables -A OUTPUT -p udp –dport 123 -j ACCEPT
sudo iptables -A OUTPUT -p icmp –icmp-type 8 -j ACCEPT
}

switch_profile() {
local profile=”$1”
local config_file=”$PROFILES_DIR/$profile.conf”

```
[ ! -f "$config_file" ] && { echo "Profile not found: $config_file"; exit 1; }

echo "Switching to $profile with BULLETPROOF kill switch..."

# Stop current VPN
sudo systemctl stop wg-quick@mulvad 2>/dev/null

# Setup BULLETPROOF firewall (includes kill switch)
setup_bulletproof_killswitch "$config_file"

# Switch config
sudo rm -f "$ACTIVE_CONFIG"
sudo ln -sf "$config_file" "$ACTIVE_CONFIG"

# Start VPN
if sudo systemctl start wg-quick@mulvad; then
    echo "Waiting for interface..."
    sleep 3
    
    if ip link show mulvad >/dev/null 2>&1; then
        echo "✅ $profile active with BULLETPROOF kill switch"
        curl -s --max-time 10 http://ipinfo.io/ip 2>/dev/null || echo "Protected - no direct internet"
    else
        echo "❌ Interface failed but traffic still BLOCKED"
    fi
else
    echo "❌ VPN failed but traffic still BLOCKED by kill switch"
fi

# Save rules
sudo iptables-save | sudo tee /etc/iptables/iptables.rules > /dev/null
```

}

show_status() {
if systemctl is-active –quiet wg-quick@mulvad && ip link show mulvad >/dev/null 2>&1; then
local ip=$(curl -s –max-time 5 http://ipinfo.io/ip 2>/dev/null)
echo “Connected: ${ip:-‘Protected - IP check failed’}”

```
    # Show which profile is active
    if [ -L "$ACTIVE_CONFIG" ]; then
        local active_profile=$(basename $(readlink "$ACTIVE_CONFIG") .conf)
        echo "Active profile: $active_profile"
    fi
else
    echo "Disconnected - traffic BLOCKED"
fi
```

}

turn_off_vpn() {
sudo systemctl stop wg-quick@mulvad
restore_base_firewall
sudo iptables-save | sudo tee /etc/iptables/iptables.rules > /dev/null
echo “✅ VPN off, normal internet restored”
}

# Main command dispatcher

case “$1” in
speed|privacy|streaming)
switch_profile “$1”
;;
off)
turn_off_vpn
;;
status)
show_status
;;
clear)
restore_base_firewall
sudo iptables-save | sudo tee /etc/iptables/iptables.rules > /dev/null
echo “✅ Base firewall restored”
;;
*)
echo “Usage: $0 [speed|privacy|streaming|off|status|clear]”
echo “”
echo “Commands:”
echo “  speed      - Switch to speed-optimized profile with kill switch”
echo “  privacy    - Switch to privacy-focused profile with kill switch”
echo “  streaming  - Switch to streaming profile with kill switch”
echo “  off        - Turn off VPN and restore normal internet”
echo “  status     - Show current connection status”
echo “  clear      - Restore base firewall (without VPN kill switch)”
exit 1
;;
esac