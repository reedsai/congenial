#!/bin/bash

# A raw iptables firewall script that enforces a "Default Deny" policy.

# --- 1. Flush all existing rules, chains, and counters ---
echo "Flushing all existing iptables rules..."
iptables -F
iptables -X
iptables -t nat -F
iptables -t nat -X
iptables -t mangle -F
iptables -t mangle -X
iptables -P INPUT ACCEPT
iptables -P FORWARD ACCEPT
iptables -P OUTPUT ACCEPT

# --- 2. Set default "Default Deny" policies ---
echo "Setting default DROP policies..."
iptables -P INPUT DROP
iptables -P FORWARD DROP
iptables -P OUTPUT DROP

# --- 3. Allow all loopback traffic ---
iptables -A INPUT -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT

# --- 4. Allow established connections (CRITICAL for a stateful firewall) ---
# This allows return traffic for connections you have initiated.
iptables -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT

# --- 5. Allow specific INCOMING traffic ---
iptables -A INPUT -p tcp --dport 22 -m conntrack --ctstate NEW -j ACCEPT # Allow new SSH connections
iptables -A INPUT -p udp --sport 67 --dport 68 -j ACCEPT # Allow DHCP responses

# --- 6. Allow specific OUTGOING traffic ---
# Allow apps to talk to our local DNS server (dnscrypt-proxy)
iptables -A OUTPUT -d 127.0.0.1 -p udp --dport 53 -j ACCEPT
iptables -A OUTPUT -d 127.0.0.1 -p tcp --dport 53 -j ACCEPT

# Allow secure DNS (DoH) and general HTTPS web Browse
iptables -A OUTPUT -p tcp --dport 443 -m conntrack --ctstate NEW -j ACCEPT

# Allow basic HTTP
iptables -A OUTPUT -p tcp --dport 80 -m conntrack --ctstate NEW -j ACCEPT

# Allow ping
iptables -A OUTPUT -p icmp --icmp-type 8 -j ACCEPT

# Allow time sync
iptables -A OUTPUT -p udp --dport 123 -j ACCEPT

echo "iptables firewall rules applied."
