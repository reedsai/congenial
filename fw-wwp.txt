## SHADOWSOCKS-RUST SYNTAX ERROR:

**The `--pid-file` argument doesn‚Äôt exist in shadowsocks-rust!**

## FIXED VERSION:

```bash
sudo tee /usr/local/bin/vpn-switch << 'EOF'
#!/bin/bash

install_shadowsocks() {
    if ! command -v sslocal >/dev/null; then
        echo "üì¶ Installing shadowsocks-rust..."
        sudo pacman -S --noconfirm shadowsocks-rust
    fi
}

create_stealth_config() {
    local profile="$1"
    local original_config="/etc/wireguard/profiles/$profile.conf"
    local stealth_config="/tmp/wg-stealth.conf"
    
    [ ! -f "$original_config" ] && { echo "‚ùå Config $profile not found"; exit 1; }
    
    # Copy EVERYTHING from original config
    cp "$original_config" "$stealth_config"
    
    # ONLY change the Endpoint to shadowsocks proxy
    sed -i 's/Endpoint = .*/Endpoint = 127.0.0.1:1080/' "$stealth_config"
    
    # Verify all critical parts exist
    if ! grep -q "PrivateKey" "$stealth_config" || \
       ! grep -q "PublicKey" "$stealth_config" || \
       ! grep -q "AllowedIPs" "$stealth_config" || \
       ! grep -q "Address" "$stealth_config"; then
        echo "‚ùå Critical WireGuard parameters missing in $profile config"
        exit 1
    fi
    
    echo "$stealth_config"
}

get_real_server_ip() {
    local profile="$1"
    local config="/etc/wireguard/profiles/$profile.conf"
    
    # Extract real Mullvad server IP
    local endpoint=$(grep "Endpoint" "$config" | cut -d'=' -f2 | tr -d ' ')
    local server_ip=$(echo "$endpoint" | cut -d':' -f1)
    
    echo "$server_ip"
}

beast_mode() {
    local profile="$1"
    local display_name="$2"
    
    echo "üêâ ULTIMATE BEAST MODE - $display_name"
    
    install_shadowsocks
    
    local real_server_ip=$(get_real_server_ip "$profile")
    local real_server_port=$(grep "Endpoint" "/etc/wireguard/profiles/$profile.conf" | cut -d':' -f2)
    
    echo "üì° Real server: $real_server_ip:$real_server_port"
    
    # Stop everything
    sudo systemctl stop wg-quick@mulvad 2>/dev/null
    sudo pkill -f sslocal 2>/dev/null
    
    # Create shadowsocks config pointing to REAL Mullvad server
    cat > /tmp/ss-config.json << SSEOF
{
    "server": "$real_server_ip",
    "server_port": $real_server_port,
    "local_address": "127.0.0.1", 
    "local_port": 1080,
    "password": "$(openssl rand -base64 16)",
    "timeout": 300,
    "method": "chacha20-ietf-poly1305",
    "mode": "tcp_only",
    "fast_open": true
}
SSEOF
    
    # Start shadowsocks proxy (FIXED SYNTAX)
    sslocal --config /tmp/ss-config.json --daemonize &
    SS_PID=$!
    echo $SS_PID > /tmp/ss.pid
    sleep 3
    
    # Verify shadowsocks started
    if ! ps -p $SS_PID >/dev/null 2>&1; then
        echo "‚ùå Shadowsocks failed to start"
        exit 1
    fi
    
    # Test shadowsocks proxy
    if ! timeout 3 nc -z 127.0.0.1 1080; then
        echo "‚ùå Shadowsocks proxy not responding"
        kill $SS_PID 2>/dev/null
        exit 1
    fi
    
    echo "‚úÖ Shadowsocks proxy active on 127.0.0.1:1080"
    
    # Create complete stealth WireGuard config
    local stealth_config=$(create_stealth_config "$profile")
    
    # Beast firewall - Allow traffic to REAL server only
    sudo iptables -F && sudo iptables -X
    sudo iptables -P INPUT DROP && sudo iptables -P FORWARD DROP && sudo iptables -P OUTPUT DROP
    
    # Allow shadowsocks to connect to real Mullvad server
    sudo iptables -A OUTPUT -d "$real_server_ip" -p udp --dport "$real_server_port" -j ACCEPT
    
    # Allow localhost (WireGuard <-> shadowsocks communication)
    sudo iptables -A INPUT -i lo -j ACCEPT
    sudo iptables -A OUTPUT -o lo -j ACCEPT
    
    # Allow VPN interface (all WireGuard traffic)
    sudo iptables -A OUTPUT -o mulvad -j ACCEPT
    sudo iptables -A INPUT -i mulvad -j ACCEPT
    sudo iptables -A INPUT -i mulvad -m conntrack --ctstate NEW,RELATED,ESTABLISHED -j ACCEPT
    sudo iptables -A OUTPUT -o mulvad -m conntrack --ctstate NEW,RELATED,ESTABLISHED -j ACCEPT
    
    # DNS through VPN only
    sudo iptables -A OUTPUT -o mulvad -p udp --dport 53 -j ACCEPT
    sudo iptables -A OUTPUT -o mulvad -p tcp --dport 53 -j ACCEPT
    sudo iptables -A OUTPUT -o mulvad -p udp --dport 443 -j ACCEPT
    sudo iptables -A OUTPUT -o mulvad -p tcp --dport 443 -j ACCEPT
    
    # SSH through VPN only
    sudo iptables -A INPUT -i mulvad -p tcp --dport 22 -j ACCEPT
    
    # Start WireGuard with stealth config
    sudo rm -f /etc/wireguard/mulvad.conf
    sudo ln -sf "$stealth_config" /etc/wireguard/mulvad.conf
    
    if sudo systemctl start wg-quick@mulvad; then
        sleep 5
        
        if ip link show mulvad >/dev/null 2>&1; then
            CURRENT_IP=$(timeout 5 curl -s http://ipinfo.io/ip 2>/dev/null)
            echo "üêâ BEAST ACTIVE - $display_name"
            echo "üåç VPN IP: $CURRENT_IP"
            echo "üëÅÔ∏è ISP sees: UDP to $real_server_ip:$real_server_port (through shadowsocks)"
            echo "üáπüá∑ DPI Status: BYPASSED"
        else
            echo "‚ùå WireGuard interface failed - TOTAL LOCKDOWN"
        fi
    else
        echo "‚ùå WireGuard failed to start - TOTAL LOCKDOWN"
    fi
    
    sudo iptables-save | sudo tee /etc/iptables/iptables.rules > /dev/null
}

beast_off() {
    sudo systemctl stop wg-quick@mulvad
    [ -f /tmp/ss.pid ] && kill $(cat /tmp/ss.pid) 2>/dev/null && rm /tmp/ss.pid
    rm -f /tmp/ss-config.json /tmp/wg-stealth.conf
    
    # Restore Arch Fortress firewall
    sudo iptables -F && sudo iptables -X
    sudo iptables -P INPUT DROP && sudo iptables -P FORWARD DROP && sudo iptables -P OUTPUT DROP
    sudo iptables -A INPUT -i lo -j ACCEPT && sudo iptables -A OUTPUT -o lo -j ACCEPT
    sudo iptables -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
    sudo iptables -A OUTPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
    sudo iptables -A INPUT -p tcp --dport 22 -m conntrack --ctstate NEW -j ACCEPT
    sudo iptables -A OUTPUT -d 127.0.0.1 -p udp --dport 53 -j ACCEPT
    sudo iptables -A OUTPUT -p tcp --dport 443 -j ACCEPT
    sudo iptables -A OUTPUT -p tcp --dport 80 -j ACCEPT
    sudo iptables -A OUTPUT -p udp --dport 123 -j ACCEPT
    sudo iptables -A OUTPUT -p icmp --icmp-type 8 -j ACCEPT
    sudo iptables-save | sudo tee /etc/iptables/iptables.rules > /dev/null
}

case "$1" in
    beast) beast_mode "privacy" "Sweden" ;;
    switzerland) beast_mode "switzerland" "Switzerland" ;;
    off) beast_off && echo "‚úÖ Beast off" ;;
    status)
        if systemctl is-active --quiet wg-quick@mulvad && ip link show mulvad >/dev/null 2>&1; then
            CURRENT_IP=$(timeout 3 curl -s http://ipinfo.io/ip 2>/dev/null)
            echo "üêâ BEAST: $CURRENT_IP"
        else
            echo "üî¥ LOCKDOWN"
        fi
        ;;
    *)
        echo "Usage: $0 [beast|switzerland|off|status]"
        echo "üêâ ULTIMATE BEAST - Complete WireGuard + Shadowsocks"
        exit 1
        ;;
esac
EOF

sudo chmod +x /usr/local/bin/vpn-switch
```

**FIXED:**

- ‚úÖ Removed `--pid-file` argument
- ‚úÖ Manual PID tracking with `$!`
- ‚úÖ Added shadowsocks proxy connectivity test
- ‚úÖ Proper process verification

**Now shadowsocks will start correctly!**